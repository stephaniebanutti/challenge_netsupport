"""
Django settings for rest_netsupport project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.

DEBUG_ALL, DEBUG_VALUES = True, '1'

# ALLOWED HOSTS
os.environ['DJANGO_ALLOWED_HOSTS'] = '*'

# DEBUG
os.environ['DEBUG'] = '0' if DEBUG_ALL == False else DEBUG_VALUES
os.environ['QUEUE_DEBUG'] = '0' if DEBUG_ALL == False else DEBUG_VALUES

# EMAIL SETTINGS
os.environ['EMAIL_HOST'] = 'smtp.mail.com.br'
os.environ['EMAIL_PORT'] = '587'
os.environ['EMAIL_HOST_USER'] = 'mail@mail.com.br'
os.environ['EMAIL_HOST_PASSWORD'] = 'passwordroot'
os.environ['EMAIL_USE_TLS'] = '1'
os.environ['EMAIL_USE_SSL'] = '1'
os.environ['DEFAULT_FROM_EMAIL'] = 'mail@mail.com.br'

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY", default="21ieud890asikdp12m3j1290!@#@!#EWE!@45E65@#@!!@!")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(int(os.environ.get("DEBUG", default=0)))

#HOSTS
ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(" ")

#CSRF
CSRF_FAILURE_VIEW = 'app_netsupport.views.csrf_failure'

# INFORMATIVE SETTINGS
INFORMATIVE_MAIL = "mail@mail.com.br"

#MAILER
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Host for sending e-mail.
EMAIL_HOST = os.environ.get("EMAIL_HOST")

# Port for sending e-mail.
EMAIL_PORT = os.environ.get("EMAIL_PORT")

# Optional SMTP authentication information for EMAIL_HOST.
EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD")

# Authentication
EMAIL_USE_TLS = bool(int(os.environ.get("EMAIL_USE_TLS", default=1)))
EMAIL_USE_SSL: bool(int(os.environ.get("EMAIL_USE_SSL", default=1)))

# DEFAULT FROM EMAIL
DEFAULT_FROM_EMAIL = os.environ.get("DEFAULT_FROM_EMAIL")

# BASE_DOCS
BASE_DOCS = str(BASE_DIR).replace("\\", "/") + "/docs"

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app_netsupport',
    'functions',
    'functions.technicians',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

X_FRAME_OPTIONS = 'SAMEORIGIN'

ROOT_URLCONF = 'rest_netsupport.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
            'libraries': {}
        },
    },
]

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# PRD = PRODUÇÃO | HOM = HOMOLOGAÇÃO
DATABASE_ENVIRONMENT = 'PRD'

# ACCOUNT
DATABASE_OPTIONS = {
    'ENGINE': 'django.db.backends.postgresql_psycopg2',
    "PRD": {
        "host": 'localhost',
        "user": 'postgres',
        "password": '120450',
        "port": '5432'
    },
    "HOM": {
        "host": 'localhost',
        "user": 'postgres',
        "password": '120450',
        "port": '5432'
    },
    "DATABASES": {
        "netsupportdb": "netsupport",
    }
}

DATABASE_HOST = DATABASE_OPTIONS[DATABASE_ENVIRONMENT]["host"]
DATABASE_USER = DATABASE_OPTIONS[DATABASE_ENVIRONMENT]["user"]
DATABASE_PASSWORD = DATABASE_OPTIONS[DATABASE_ENVIRONMENT]["password"]
DATABASE_PORT = DATABASE_OPTIONS[DATABASE_ENVIRONMENT]["port"]

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# DATABASE UPDATE
dkeys = DATABASE_OPTIONS["DATABASES"]
for k in dkeys:
    DATABASES.update({
        k: {
            'ENGINE': DATABASE_OPTIONS["ENGINE"],
            'NAME': dkeys[k],
            'USER': DATABASE_USER,
            'PASSWORD': DATABASE_PASSWORD,
            'HOST': DATABASE_HOST,
            'PORT': DATABASE_PORT,
        }
    })

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Password hashers
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.Argon2PasswordHasher',
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_L10N = True
USE_TZ = False

# SECURE
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTOCOL', 'http')

SESSION_COOKIE_SECURE = False
CSRF_COOKIE_SECURE = False
CSRF_COOKIE_HTTPONLY = False
SECURE_SSL_REDIRECT = False

# POST
DATA_UPLOAD_MAX_MEMORY_SIZE = 52428800000
DATA_UPLOAD_MAX_NUMBER_FIELDS = 5000000000

CACHE_BACKEND = 'memcached://127.0.0.1:11211/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

MEDIA_ROOT = os.path.join(BASE_DIR, 'docs/')

MEDIA_URL = "/docs/"

LOGIN_REDIRECT_URL = '/'

LOGOUT_REDIRECT_URL = '/accounts/login'

ASGI_APPLICATION = "rest_netsupport.asgi.application"

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
    'ROUTING': 'rest_netsupport_websocket.routing.websocket_urlpatterns',
}